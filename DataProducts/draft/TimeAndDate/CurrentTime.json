{
  "openapi": "3.0.2",
  "info": {
    "title": "Current time in a given country",
    "description": "Get the current time in a given country based on the ISO 3166-1 alpha-2 country code, formatted in RFC 3339 format",
    "version": "0.0.1"
  },
  "paths": {
    "/draft/TimeAndDate/CurrentTime": {
      "post": {
        "summary": "Current time in a given country",
        "description": "Get the current time in a given country based on the ISO 3166-1 alpha-2 country code, formatted in RFC 3339 format",
        "operationId": "request_draft_TimeAndDate_CurrentTime",
        "parameters": [
          {
            "description": "Optional consent token",
            "required": false,
            "schema": {
              "title": "X-Consent-Token",
              "type": "string",
              "description": "Optional consent token"
            },
            "name": "x-consent-token",
            "in": "header"
          },
          {
            "description": "The login token. Value should be \"Bearer [token]\"",
            "required": false,
            "schema": {
              "title": "Authorization",
              "type": "string",
              "description": "The login token. Value should be \"Bearer [token]\""
            },
            "name": "authorization",
            "in": "header"
          },
          {
            "description": "The bare domain of the system that provided the token.",
            "required": false,
            "schema": {
              "title": "X-Authorization-Provider",
              "type": "string",
              "description": "The bare domain of the system that provided the token."
            },
            "name": "x-authorization-provider",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrentTimeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentTimeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "444": {
            "description": "Additional Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            }
          },
          "550": {
            "description": "Additional Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "title": "BadGateway",
        "type": "object",
        "properties": {},
        "description": "This response is reserved by Product Gateway."
      },
      "Country": {
        "title": "Country",
        "enum": [
          "ad",
          "ae",
          "af",
          "ag",
          "ai",
          "al",
          "am",
          "ao",
          "aq",
          "ar",
          "as",
          "at",
          "au",
          "aw",
          "ax",
          "az",
          "ba",
          "bb",
          "bd",
          "be",
          "bf",
          "bg",
          "bh",
          "bi",
          "bj",
          "bl",
          "bm",
          "bn",
          "bo",
          "bq",
          "br",
          "bs",
          "bt",
          "bv",
          "bw",
          "by",
          "bz",
          "ca",
          "cc",
          "cd",
          "cf",
          "cg",
          "ch",
          "ci",
          "ck",
          "cl",
          "cm",
          "cn",
          "co",
          "cr",
          "cu",
          "cv",
          "cw",
          "cx",
          "cy",
          "cz",
          "de",
          "dj",
          "dk",
          "dm",
          "do",
          "dz",
          "ec",
          "ee",
          "eg",
          "eh",
          "er",
          "es",
          "et",
          "fi",
          "fj",
          "fk",
          "fm",
          "fo",
          "fr",
          "ga",
          "gb",
          "gd",
          "ge",
          "gf",
          "gg",
          "gh",
          "gi",
          "gl",
          "gm",
          "gn",
          "gp",
          "gq",
          "gr",
          "gs",
          "gt",
          "gu",
          "gw",
          "gy",
          "hk",
          "hm",
          "hn",
          "hr",
          "ht",
          "hu",
          "id",
          "ie",
          "il",
          "im",
          "in",
          "io",
          "iq",
          "ir",
          "is",
          "it",
          "je",
          "jm",
          "jo",
          "jp",
          "ke",
          "kg",
          "kh",
          "ki",
          "km",
          "kn",
          "kp",
          "kr",
          "kw",
          "ky",
          "kz",
          "la",
          "lb",
          "lc",
          "li",
          "lk",
          "lr",
          "ls",
          "lt",
          "lu",
          "lv",
          "ly",
          "ma",
          "mc",
          "md",
          "me",
          "mf",
          "mg",
          "mh",
          "mk",
          "ml",
          "mm",
          "mn",
          "mo",
          "mp",
          "mq",
          "mr",
          "ms",
          "mt",
          "mu",
          "mv",
          "mw",
          "mx",
          "my",
          "mz",
          "na",
          "nc",
          "ne",
          "nf",
          "ng",
          "ni",
          "nl",
          "no",
          "np",
          "nr",
          "nu",
          "nz",
          "om",
          "pa",
          "pe",
          "pf",
          "pg",
          "ph",
          "pk",
          "pl",
          "pm",
          "pn",
          "pr",
          "ps",
          "pt",
          "pw",
          "py",
          "qa",
          "re",
          "ro",
          "rs",
          "ru",
          "rw",
          "sa",
          "sb",
          "sc",
          "sd",
          "se",
          "sg",
          "sh",
          "si",
          "sj",
          "sk",
          "sl",
          "sm",
          "sn",
          "so",
          "sr",
          "ss",
          "st",
          "sv",
          "sx",
          "sy",
          "sz",
          "tc",
          "td",
          "tf",
          "tg",
          "th",
          "tj",
          "tk",
          "tl",
          "tm",
          "tn",
          "to",
          "tr",
          "tt",
          "tv",
          "tw",
          "tz",
          "ua",
          "ug",
          "um",
          "us",
          "uy",
          "uz",
          "va",
          "vc",
          "ve",
          "vg",
          "vi",
          "vn",
          "vu",
          "wf",
          "ws",
          "ye",
          "yt",
          "za",
          "zm",
          "zw"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "CurrentTimeRequest": {
        "title": "CurrentTimeRequest",
        "required": ["countryCode"],
        "type": "object",
        "properties": {
          "countryCode": {
            "title": "ISO 3166-1 alpha-2 country code",
            "allOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          }
        }
      },
      "CurrentTimeResponse": {
        "title": "CurrentTimeResponse",
        "required": ["currentTime"],
        "type": "object",
        "properties": {
          "currentTime": {
            "title": "Current time in the desired country in RFC 3339 format",
            "type": "string"
          }
        }
      },
      "DataSourceError": {
        "title": "DataSourceError",
        "required": ["type", "message"],
        "type": "object",
        "properties": {
          "type": {
            "title": "Error type",
            "type": "string",
            "description": "Error identifier"
          },
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "DataSourceNotFound": {
        "title": "DataSourceNotFound",
        "type": "object",
        "properties": {
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description",
            "default": "Data source not found"
          }
        },
        "description": "This response is reserved by Product Gateway."
      },
      "DoesNotConformToDefinition": {
        "title": "DoesNotConformToDefinition",
        "required": ["data_source_status_code"],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string",
            "default": "Response from data source does not conform to definition"
          },
          "data_source_status_code": {
            "title": "Data source status code",
            "type": "integer",
            "description": "HTTP status code returned from the data source"
          }
        },
        "description": "This response is reserved by Product Gateway."
      },
      "Forbidden": {
        "title": "Forbidden",
        "required": ["type", "message"],
        "type": "object",
        "properties": {
          "type": {
            "title": "Error type",
            "type": "string",
            "description": "Error identifier"
          },
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "GatewayTimeout": {
        "title": "GatewayTimeout",
        "type": "object",
        "properties": {
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        },
        "description": "This response is reserved by Product Gateway."
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "NotFound": {
        "title": "NotFound",
        "required": ["type", "message"],
        "type": "object",
        "properties": {
          "type": {
            "title": "Error type",
            "type": "string",
            "description": "Error identifier"
          },
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "ServiceUnavailable": {
        "title": "ServiceUnavailable",
        "type": "object",
        "properties": {
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        },
        "description": "This response is reserved by Product Gateway."
      },
      "Unauthorized": {
        "title": "Unauthorized",
        "required": ["type", "message"],
        "type": "object",
        "properties": {
          "type": {
            "title": "Error type",
            "type": "string",
            "description": "Error identifier"
          },
          "message": {
            "title": "Error message",
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}
