{
  "openapi": "3.1.0",
  "info": {
    "title": "NSG Agent information",
    "description": "In the Nordic Smart Government information exchange context the agent represents both registered organizations (\"companies\") and persons who are doing business without being registered organizations, usually as sole traders (sole proprietors). This data product definition returns basic information content for any agent.",
    "version": "1.0.2"
  },
  "paths": {
    "/NSG/Agent/BasicInformation_v1.0": {
      "post": {
        "tags": ["Company"],
        "summary": "NSG Agent information",
        "description": "In the Nordic Smart Government information exchange context the agent represents both registered organizations (\"companies\") and persons who are doing business without being registered organizations, usually as sole traders (sole proprietors). This data product definition returns basic information content for any agent.",
        "operationId": "request_NSG_Agent_BasicInformation_v1_0",
        "parameters": [
          {
            "name": "x-consent-token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Optional consent token",
              "default": "",
              "title": "X-Consent-Token"
            },
            "description": "Optional consent token"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The login token. Value should be \"Bearer [token]\"",
              "default": "",
              "title": "Authorization"
            },
            "description": "The login token. Value should be \"Bearer [token]\""
          },
          {
            "name": "x-authorization-provider",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The bare domain of the system that provided the token.",
              "title": "X-Authorization-Provider"
            },
            "description": "The bare domain of the system that provided the token."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-API-Key",
              "description": "API key or token"
            },
            "description": "API key or token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BasicInformationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicInformationResponse"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitExceeded"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "444": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            },
            "description": "Additional Response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "503": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            },
            "description": "Gateway Timeout"
          },
          "550": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            },
            "description": "Additional Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "properties": {},
        "additionalProperties": false,
        "type": "object",
        "title": "BadGateway",
        "description": "This response is reserved by Product Gateway."
      },
      "BasicInformationRequest": {
        "properties": {
          "nationalIdentifier": {
            "type": "string",
            "title": "National Identifier",
            "description": "National identifier for a legal entity.",
            "examples": ["2464491-9"]
          }
        },
        "type": "object",
        "required": ["nationalIdentifier"],
        "title": "BasicInformationRequest"
      },
      "BasicInformationResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the legal entity.",
            "examples": ["Oy Example Ab"]
          },
          "legalForm": {
            "$ref": "#/components/schemas/NordicLegalForm",
            "title": "Legal form",
            "description": "The [Nordic Legal Form code](https://koodistot.suomi.fi/codescheme;registryCode=verotus;schemeCode=LegalForm2) for the company.",
            "examples": ["FI_OY"]
          },
          "legalStatus": {
            "$ref": "#/components/schemas/LegalStatus",
            "title": "Legal status",
            "description": "Status of the legal entity.",
            "examples": ["NORMAL"]
          },
          "registrationDate": {
            "type": "string",
            "format": "date",
            "title": "Registration date",
            "description": "Official registration date of the legal entity in the national trade registry."
          },
          "registeredAddress": {
            "$ref": "#/components/schemas/RegisteredAddress"
          }
        },
        "type": "object",
        "required": [
          "name",
          "legalForm",
          "legalStatus",
          "registrationDate",
          "registeredAddress"
        ],
        "title": "BasicInformationResponse"
      },
      "DataSourceError": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceError"
      },
      "DataSourceNotFound": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Data source not found"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "DataSourceNotFound",
        "description": "This response is reserved by Product Gateway."
      },
      "DoesNotConformToDefinition": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Response from data source does not conform to definition"
          },
          "data_source_status_code": {
            "type": "integer",
            "title": "Data source status code",
            "description": "HTTP status code returned from the data source"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["data_source_status_code"],
        "title": "DoesNotConformToDefinition",
        "description": "This response is reserved by Product Gateway."
      },
      "Forbidden": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "Forbidden"
      },
      "GatewayTimeout": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "GatewayTimeout",
        "description": "This response is reserved by Product Gateway."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ISO_3166_1_Alpha_3": {
        "type": "string",
        "enum": [
          "AFG",
          "ALB",
          "DZA",
          "ASM",
          "AND",
          "AGO",
          "AIA",
          "ATA",
          "ATG",
          "ARG",
          "ARM",
          "ABW",
          "AUS",
          "AUT",
          "AZE",
          "BHS",
          "BHR",
          "BGD",
          "BRB",
          "BLR",
          "BEL",
          "BLZ",
          "BEN",
          "BMU",
          "BTN",
          "BOL",
          "BIH",
          "BWA",
          "BVT",
          "BRA",
          "IOT",
          "BRN",
          "BGR",
          "BFA",
          "BDI",
          "KHM",
          "CMR",
          "CAN",
          "CPV",
          "CYM",
          "CAF",
          "TCD",
          "CHL",
          "CHN",
          "CXR",
          "CCK",
          "COL",
          "COM",
          "COG",
          "COD",
          "COK",
          "CRI",
          "CIV",
          "HRV",
          "CUB",
          "CYP",
          "CZE",
          "DNK",
          "DJI",
          "DMA",
          "DOM",
          "ECU",
          "EGY",
          "SLV",
          "GNQ",
          "ERI",
          "EST",
          "ETH",
          "FLK",
          "FRO",
          "FJI",
          "FIN",
          "FRA",
          "GUF",
          "PYF",
          "ATF",
          "GAB",
          "GMB",
          "GEO",
          "DEU",
          "GHA",
          "GIB",
          "GRC",
          "GRL",
          "GRD",
          "GLP",
          "GUM",
          "GTM",
          "GGY",
          "GIN",
          "GNB",
          "GUY",
          "HTI",
          "HMD",
          "VAT",
          "HND",
          "HKG",
          "HUN",
          "ISL",
          "IND",
          "IDN",
          "IRN",
          "IRQ",
          "IRL",
          "IMN",
          "ISR",
          "ITA",
          "JAM",
          "JPN",
          "JEY",
          "JOR",
          "KAZ",
          "KEN",
          "KIR",
          "PRK",
          "KOR",
          "KWT",
          "KGZ",
          "LAO",
          "LVA",
          "LBN",
          "LSO",
          "LBR",
          "LBY",
          "LIE",
          "LTU",
          "LUX",
          "MAC",
          "MKD",
          "MDG",
          "MWI",
          "MYS",
          "MDV",
          "MLI",
          "MLT",
          "MHL",
          "MTQ",
          "MRT",
          "MUS",
          "MYT",
          "MEX",
          "FSM",
          "MDA",
          "MCO",
          "MNG",
          "MNE",
          "MSR",
          "MAR",
          "MOZ",
          "MMR",
          "NAM",
          "NRU",
          "NPL",
          "NLD",
          "ANT",
          "NCL",
          "NZL",
          "NIC",
          "NER",
          "NGA",
          "NIU",
          "NFK",
          "MNP",
          "NOR",
          "OMN",
          "PAK",
          "PLW",
          "PSE",
          "PAN",
          "PNG",
          "PRY",
          "PER",
          "PHL",
          "PCN",
          "POL",
          "PRT",
          "PRI",
          "QAT",
          "REU",
          "ROU",
          "RUS",
          "RWA",
          "SHN",
          "KNA",
          "LCA",
          "SPM",
          "VCT",
          "WSM",
          "SMR",
          "STP",
          "SAU",
          "SEN",
          "SRB",
          "SYC",
          "SLE",
          "SGP",
          "SVK",
          "SVN",
          "SLB",
          "SOM",
          "ZAF",
          "SGS",
          "SSD",
          "ESP",
          "LKA",
          "SDN",
          "SUR",
          "SJM",
          "SWZ",
          "SWE",
          "CHE",
          "SYR",
          "TWN",
          "TJK",
          "TZA",
          "THA",
          "TLS",
          "TGO",
          "TKL",
          "TON",
          "TTO",
          "TUN",
          "TUR",
          "TKM",
          "TCA",
          "TUV",
          "UGA",
          "UKR",
          "ARE",
          "GBR",
          "USA",
          "UMI",
          "URY",
          "UZB",
          "VUT",
          "VEN",
          "VNM",
          "VGB",
          "VIR",
          "WLF",
          "ESH",
          "YEM",
          "ZMB",
          "ZWE"
        ],
        "title": "ISO_3166_1_Alpha_3"
      },
      "LegalStatus": {
        "type": "string",
        "enum": ["NORMAL", "LIQUIDATION", "RESTRUCTURING", "BANKRUPTCY"],
        "title": "LegalStatus"
      },
      "NordicLegalForm": {
        "type": "string",
        "enum": [
          "NO_AAFY",
          "NO_ADOS",
          "NO_ANNA",
          "NO_ANS",
          "NO_AS",
          "NO_ASA",
          "NO_BA",
          "NO_BBL",
          "NO_BEDR",
          "NO_BO",
          "NO_BRL",
          "NO_DA",
          "NO_ENK",
          "NO_ESEK",
          "NO_EOEFG",
          "NO_FKF",
          "NO_FLI",
          "NO_FYLK",
          "NO_GFS",
          "NO_IKJP",
          "NO_IKS",
          "NO_KBO",
          "NO_KF",
          "NO_KIRK",
          "NO_KOMM",
          "NO_KS",
          "NO_KTRF",
          "NO_NUF",
          "NO_OPMV",
          "NO_ORGL",
          "NO_PERS",
          "NO_PK",
          "NO_PRE",
          "NO_SA",
          "NO_SAM",
          "NO_SE",
          "NO_SF",
          "NO_SPA",
          "NO_STAT",
          "NO_STI",
          "NO_SAER",
          "NO_TVAM",
          "NO_VPFO",
          "SE_I",
          "SE_TSF",
          "SE_MB",
          "SE_SE",
          "SE_SCE",
          "SE_SF",
          "SE_HB",
          "SE_BAB",
          "SE_EK",
          "SE_KB",
          "SE_SB",
          "SE_FOF",
          "SE_OFB",
          "SE_FAB",
          "SE_KHF",
          "SE_EEIG",
          "SE_EGTS",
          "SE_BRF",
          "SE_BF",
          "SE_AB",
          "SE_BFL",
          "SE_E",
          "SE_EB",
          "SE_FL",
          "SE_S",
          "FI_AYH",
          "FI_AHVELL",
          "FI_AHVE",
          "FI_ASH",
          "FI_ASY",
          "FI_AOY",
          "FI_AY",
          "FI_EYHT",
          "FI_ESAA",
          "FI_EVL",
          "FI_ELSYH",
          "FI_ETS",
          "FI_ETY",
          "FI_EUOKKT",
          "FI_SCE",
          "FI_SCP",
          "FI_SE",
          "FI_EVLUT",
          "FI_HYYH",
          "FI_KVJ",
          "FI_OYJ",
          "FI_VOJ",
          "FI_KK",
          "FI_KOY",
          "FI_KVAKYH",
          "FI_KVY",
          "FI_KY",
          "FI_KONK",
          "FI_KUNTLL",
          "FI_KUNT",
          "FI_KUNTLLL",
          "FI_KUNTYHT",
          "FI_KP",
          "FI_LIY",
          "FI_MHY",
          "FI_MJUO",
          "FI_MUUKOY",
          "FI_MSAA",
          "FI_MTYH",
          "FI_MUVE",
          "FI_MYH",
          "FI_MUYP",
          "FI_MUU",
          "FI_MOHLO",
          "FI_ORTO",
          "FI_OY",
          "FI_OK",
          "FI_OP",
          "FI_PY",
          "FI_PK",
          "FI_SL",
          "FI_SP",
          "FI_SAA",
          "FI_TYH",
          "FI_TEKA",
          "FI_TYKA",
          "FI_ULKO",
          "FI_VAKK",
          "FI_VOY",
          "FI_VY",
          "FI_VALT",
          "FI_VALTLL",
          "FI_VEYHT",
          "FI_YHTE",
          "FI_YHME",
          "FI_YEH",
          "FI_YO",
          "FI_UYK"
        ],
        "title": "NordicLegalForm"
      },
      "NotFound": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "NotFound"
      },
      "RateLimitExceeded": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Rate limit exceeded"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "RateLimitExceeded",
        "description": "This response is reserved by Product Gateway."
      },
      "RegisteredAddress": {
        "properties": {
          "fullAddress": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 250,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Full address",
            "description": "The complete address written as a string. Use of this property is recommended as it will not suffer any misunderstandings that might arise through the breaking up of an address into its component parts.",
            "examples": ["Tietotie 4 A 7, 00100 Helsinki, Finland"]
          },
          "thoroughfare": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Thoroughfare",
            "description": "The name of a passage or way through from one location to another. A thoroughfare is usually a street, but it might be a waterway or some other feature.",
            "examples": ["Avenue des Champs-Élysées"]
          },
          "locatorDesignator": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Locator designator",
            "description": "A number or sequence of characters that uniquely identifies the locator within the relevant scope. In simpler terms, this is the building number, apartment number, etc.",
            "examples": ["Flat 3, 17 or 3 A 4"]
          },
          "locatorName": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Locator name",
            "description": "Proper noun(s) applied to the real world entity identified by the locator. The locator name could be the name of the property or complex, of the building or part of the building, or it could be the name of a room inside a building. The key difference between a locator and a locator name is that the latter is a proper name and is unlikely to include digits.",
            "examples": ["Shumann, Berlaymont (meeting room name)"]
          },
          "addressArea": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Address area",
            "description": "The name of a geographic area that groups Addresses. This would typically be part of a city, a neighbourhood or village. Address area is not an administrative unit.",
            "examples": ["Montmartre (in Paris)"]
          },
          "postCode": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Post code",
            "description": "The code created and maintained for postal purposes to identify a subdivision of addresses and postal delivery points.",
            "examples": ["75000"]
          },
          "postName": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Post name",
            "description": "A name created and maintained for postal purposes to identify a subdivision of addresses and postal delivery points. Usually a city.",
            "examples": ["Paris"]
          },
          "poBox": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 10,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "PO box",
            "description": "A location designator for a postal delivery point at a post office, usually a number.",
            "examples": ["9383"]
          },
          "adminUnitLevel1": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ISO_3166_1_Alpha_3"
              },
              {
                "type": "null"
              }
            ],
            "title": "Admin unit level 1",
            "description": "The name of the uppermost level of the address, almost always a country. ISO 3166 three character (Alpha 3) format.",
            "examples": ["USA"]
          },
          "adminUnitLevel2": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Admin unit level 2",
            "description": "The name of a secondary level/region of the address, usually a county, state or other such area that typically encompasses several localities. Values could be a region or province, more granular than level 1.",
            "examples": ["Uusimaa"]
          },
          "addressId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 40,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Address id",
            "description": "A globally unique identifier for each instance of an Address. The concept of adding a globally unique identifier for each instance of an address is a crucial part of the INSPIRE data spec. A number of EU countries have already implemented an ID (a UUID) in their Address Register, among them Denmark.",
            "examples": ["123e4567-e89b-12d3-a456-42661417400"]
          }
        },
        "type": "object",
        "title": "RegisteredAddress"
      },
      "ServiceUnavailable": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ServiceUnavailable",
        "description": "This response is reserved by Product Gateway."
      },
      "Unauthorized": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": ["type", "message"],
        "title": "Unauthorized"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  },
  "x-strict-validation": false
}
