{
  "openapi": "3.1.0",
  "info": {
    "title": "Beneficial owners of a non-listed company",
    "description": "The list of beneficial owners of a non-listed company. The shareholders exceeding 25 % ownership.",
    "version": "1.0.1"
  },
  "paths": {
    "/NSG/Agent/LegalEntity/NonListedCompany/BeneficialOwners_v1.0": {
      "post": {
        "tags": ["Company"],
        "summary": "Beneficial owners of a non-listed company",
        "description": "The list of beneficial owners of a non-listed company. The shareholders exceeding 25 % ownership.",
        "operationId": "request_NSG_Agent_LegalEntity_NonListedCompany_BeneficialOwners_v1_0",
        "parameters": [
          {
            "name": "x-consent-token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Consent token",
              "title": "X-Consent-Token"
            },
            "description": "Consent token"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The login token. Value should be \"Bearer [token]\"",
              "title": "Authorization"
            },
            "description": "The login token. Value should be \"Bearer [token]\""
          },
          {
            "name": "x-authorization-provider",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The bare domain of the system that provided the token.",
              "title": "X-Authorization-Provider"
            },
            "description": "The bare domain of the system that provided the token."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-API-Key",
              "description": "API key or token"
            },
            "description": "API key or token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeneficialOwnersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeneficialOwnersResponse"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitExceeded"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "444": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            },
            "description": "Additional Response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "503": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            },
            "description": "Gateway Timeout"
          },
          "550": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            },
            "description": "Additional Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "properties": {},
        "type": "object",
        "title": "BadGateway",
        "description": "This response is reserved by Product Gateway."
      },
      "BeneficialOwnersRequest": {
        "properties": {
          "nationalIdentifier": {
            "type": "string",
            "maxLength": 40,
            "title": "National identifier",
            "description": "The national identifier of the non-listed company issued by the trade register in any Nordic country.",
            "examples": ["FIN: 2464491-9 / SWE: 5560125791 / NOR:  923609016"]
          }
        },
        "type": "object",
        "required": ["nationalIdentifier"],
        "title": "BeneficialOwnersRequest"
      },
      "BeneficialOwnersResponse": {
        "properties": {
          "shareSeries": {
            "items": {
              "$ref": "#/components/schemas/ShareSeries"
            },
            "type": "array",
            "title": "Share series",
            "description": "The details of the share series classes of the company."
          },
          "shareholders": {
            "items": {
              "$ref": "#/components/schemas/Shareholder"
            },
            "type": "array",
            "title": "Shareholder",
            "description": "The list of beneficial owners of the company."
          }
        },
        "type": "object",
        "required": ["shareSeries", "shareholders"],
        "title": "BeneficialOwnersResponse"
      },
      "DataSourceError": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceError"
      },
      "DataSourceNotFound": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Data source not found"
          }
        },
        "type": "object",
        "title": "DataSourceNotFound",
        "description": "This response is reserved by Product Gateway."
      },
      "DoesNotConformToDefinition": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Response from data source does not conform to definition"
          },
          "data_source_status_code": {
            "type": "integer",
            "title": "Data source status code",
            "description": "HTTP status code returned from the data source"
          }
        },
        "type": "object",
        "required": ["data_source_status_code"],
        "title": "DoesNotConformToDefinition",
        "description": "This response is reserved by Product Gateway."
      },
      "Forbidden": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "Forbidden"
      },
      "GatewayTimeout": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "type": "object",
        "title": "GatewayTimeout",
        "description": "This response is reserved by Product Gateway."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "NotFound": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "NotFound"
      },
      "RateLimitExceeded": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Rate limit exceeded"
          }
        },
        "type": "object",
        "title": "RateLimitExceeded",
        "description": "This response is reserved by Product Gateway."
      },
      "ServiceUnavailable": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "type": "object",
        "title": "ServiceUnavailable",
        "description": "This response is reserved by Product Gateway."
      },
      "ShareOwnership": {
        "properties": {
          "shareSeriesClass": {
            "type": "string",
            "maxLength": 5,
            "title": "Share series class",
            "description": "The class of the share series that the shareholder owns.",
            "examples": ["B"]
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "description": "The number of shares that the shareholder owns a share series.",
            "examples": [20]
          }
        },
        "type": "object",
        "required": ["shareSeriesClass", "quantity"],
        "title": "ShareOwnership"
      },
      "ShareSeries": {
        "properties": {
          "shareSeriesClass": {
            "type": "string",
            "maxLength": 5,
            "title": "Share series class",
            "description": "The type of the share series of a company.",
            "examples": ["A"]
          },
          "numberOfShares": {
            "type": "integer",
            "title": "Number of shares",
            "description": "The total number of the shares in the share series class.",
            "examples": [1000]
          },
          "votesPerShare": {
            "type": "integer",
            "title": "Votes per share",
            "description": "The number of votes per share in the share series.",
            "examples": [1]
          }
        },
        "type": "object",
        "required": ["shareSeriesClass", "numberOfShares", "votesPerShare"],
        "title": "ShareSeries"
      },
      "Shareholder": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 250,
            "title": "Name",
            "description": "The name of a shareholder of the company.",
            "examples": ["Lars Lindberg | Company Ltd"]
          },
          "shareOwnership": {
            "items": {
              "$ref": "#/components/schemas/ShareOwnership"
            },
            "type": "array",
            "title": "Share ownership",
            "description": "The list of ownerships that the shareholder has in the company."
          }
        },
        "type": "object",
        "required": ["name", "shareOwnership"],
        "title": "Shareholder"
      },
      "Unauthorized": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "Unauthorized"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
