{
  "openapi": "3.1.0",
  "info": {
    "title": "Battery product data sheet",
    "description": "Technical details of a battery such as capacity and voltage",
    "version": "0.1.0"
  },
  "paths": {
    "/DPP/Energy/Battery/ProductDataSheet_v0.1": {
      "post": {
        "summary": "Battery product data sheet",
        "description": "Technical details of a battery such as capacity and voltage",
        "operationId": "request_DPP_Energy_Battery_ProductDataSheet_v0_1",
        "parameters": [
          {
            "name": "x-consent-token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Optional consent token",
              "default": "",
              "title": "X-Consent-Token"
            },
            "description": "Optional consent token"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The login token. Value should be \"Bearer [token]\"",
              "default": "",
              "title": "Authorization"
            },
            "description": "The login token. Value should be \"Bearer [token]\""
          },
          {
            "name": "x-authorization-provider",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The bare domain of the system that provided the token.",
              "title": "X-Authorization-Provider"
            },
            "description": "The bare domain of the system that provided the token."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-API-Key",
              "description": "API key or token"
            },
            "description": "API key or token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatteryDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatteryDataResponse"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitExceeded"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "444": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            },
            "description": "Additional Response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "503": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            },
            "description": "Gateway Timeout"
          },
          "550": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            },
            "description": "Additional Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "properties": {},
        "type": "object",
        "title": "BadGateway",
        "description": "This response is reserved by Product Gateway."
      },
      "BatteryDataRequest": {
        "properties": {
          "product": {
            "type": "string",
            "title": "Product identifier",
            "description": "Technical product identifier used by the manufacturer",
            "examples": ["battery-100wh-s"]
          },
          "id": {
            "type": "string",
            "title": "Identifier",
            "description": "Unique identifier of the product",
            "examples": ["177389-09633"]
          }
        },
        "type": "object",
        "required": ["product", "id"],
        "title": "BatteryDataRequest"
      },
      "BatteryDataResponse": {
        "properties": {
          "manufacturer": {
            "type": "string",
            "title": "Manufacturer",
            "description": "The manufacturer of the battery",
            "examples": ["Valmet Automotive"]
          },
          "product": {
            "type": "string",
            "title": "Product identifier",
            "description": "Technical product identifier used by the manufacturer",
            "examples": ["battery-100wh-s"]
          },
          "id": {
            "type": "string",
            "title": "Identifier",
            "description": "Unique identifier of the product",
            "examples": ["177389-09633"]
          },
          "name": {
            "type": "string",
            "title": "Product Name",
            "examples": ["Modular Power Pack, 48 V"]
          },
          "cellType": {
            "$ref": "#/components/schemas/CellType",
            "title": "Cell Type",
            "examples": ["lithium-titanate"]
          },
          "capacity": {
            "type": "number",
            "title": "Capacity",
            "description": "Battery capacity in kWh",
            "examples": [2.2]
          },
          "energy": {
            "type": "number",
            "title": "Energy (Ah)",
            "description": "Energy, Ah [1C @ 25°C]",
            "examples": [46.0]
          },
          "voltage": {
            "$ref": "#/components/schemas/Voltage",
            "description": "Information about the voltage of the battery"
          },
          "peakDischargingPower": {
            "type": "number",
            "title": "Peak Discharging Power [kW]",
            "examples": [20.0]
          },
          "peakChargingPower": {
            "type": "number",
            "title": "Peak Charging Power [kW]",
            "examples": [20.0]
          },
          "continuousPower": {
            "type": "number",
            "title": "Continuous Power [kW]",
            "examples": [10.0]
          },
          "standbyConsumption": {
            "type": "number",
            "title": "Standby Power Consumption [W]",
            "examples": [1.0]
          },
          "cycleLife": {
            "type": "integer",
            "title": "Cycle Life",
            "description": "Minimum number of cycles the battery can be recharged to at least 80% of initial capacity",
            "examples": [20000]
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions",
            "description": "Physical dimensions of the battery"
          },
          "weight": {
            "type": "number",
            "title": "Weight [kg]",
            "description": "Total dry weight [kg]",
            "examples": [41.0]
          },
          "operatingTemperature": {
            "$ref": "#/components/schemas/OperatingTemperature",
            "title": "Operating Temperature [°C]"
          },
          "ipRating": {
            "$ref": "#/components/schemas/IPCode",
            "title": "IP Rating",
            "examples": ["IP6K9K"]
          },
          "maxCoolantPressure": {
            "type": "number",
            "title": "Max Coolant Pressure [bar]",
            "examples": [3.5]
          },
          "standardsCompliance": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Standards Compliance",
            "examples": [
              [
                "ISO 13849 PL C",
                "UN 38.3",
                "IEC 62061 SIL 2",
                "IEC 61508 SIL 2",
                "ECE R100",
                "ECE R10",
                "ISO 16750"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "manufacturer",
          "product",
          "id",
          "name",
          "cellType",
          "capacity",
          "energy",
          "voltage",
          "peakDischargingPower",
          "peakChargingPower",
          "continuousPower",
          "standbyConsumption",
          "cycleLife",
          "dimensions",
          "weight",
          "operatingTemperature",
          "ipRating",
          "maxCoolantPressure",
          "standardsCompliance"
        ],
        "title": "BatteryDataResponse"
      },
      "CellType": {
        "type": "string",
        "enum": ["lithium-titanate", "lithium-ion polymer"],
        "title": "CellType"
      },
      "DataSourceError": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceError"
      },
      "DataSourceNotFound": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Data source not found"
          }
        },
        "type": "object",
        "title": "DataSourceNotFound",
        "description": "This response is reserved by Product Gateway."
      },
      "Dimensions": {
        "properties": {
          "length": {
            "type": "integer",
            "title": "Length [mm]",
            "examples": [483]
          },
          "width": {
            "type": "integer",
            "title": "Width [mm]",
            "examples": [380]
          },
          "height": {
            "type": "integer",
            "title": "Height [mm]",
            "examples": [160]
          }
        },
        "type": "object",
        "required": ["length", "width", "height"],
        "title": "Dimensions"
      },
      "DoesNotConformToDefinition": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Response from data source does not conform to definition"
          },
          "data_source_status_code": {
            "type": "integer",
            "title": "Data source status code",
            "description": "HTTP status code returned from the data source"
          }
        },
        "type": "object",
        "required": ["data_source_status_code"],
        "title": "DoesNotConformToDefinition",
        "description": "This response is reserved by Product Gateway."
      },
      "Forbidden": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "Forbidden"
      },
      "GatewayTimeout": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "type": "object",
        "title": "GatewayTimeout",
        "description": "This response is reserved by Product Gateway."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IPCode": {
        "type": "string",
        "enum": [
          "IP5X",
          "IP50",
          "IP51",
          "IP52",
          "IP53",
          "IP54",
          "IP54K",
          "IP55",
          "IP56",
          "IP56K",
          "IP57",
          "IP58",
          "IP59K",
          "IP5KX",
          "IP5K0",
          "IP5K1",
          "IP5K2",
          "IP5K3",
          "IP5K4",
          "IP5K4K",
          "IP5K5",
          "IP5K6",
          "IP5K6K",
          "IP5K7",
          "IP5K8",
          "IP5K9K",
          "IP6X",
          "IP60",
          "IP61",
          "IP62",
          "IP63",
          "IP64",
          "IP64K",
          "IP65",
          "IP66",
          "IP66K",
          "IP67",
          "IP68",
          "IP69K",
          "IP6KX",
          "IP6K0",
          "IP6K1",
          "IP6K2",
          "IP6K3",
          "IP6K4",
          "IP6K4K",
          "IP6K5",
          "IP6K6",
          "IP6K6K",
          "IP6K7",
          "IP6K8",
          "IP6K9K"
        ],
        "title": "IPCode"
      },
      "NotFound": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "NotFound"
      },
      "OperatingTemperature": {
        "properties": {
          "min": {
            "type": "number",
            "title": "Minimum operating temperature [°C]",
            "examples": [-30.0]
          },
          "max": {
            "type": "number",
            "title": "Maximum operating temperature [°C]",
            "examples": [55.0]
          },
          "recommendedMin": {
            "type": "number",
            "title": "Minimum recommended operating temperature [°C]",
            "examples": [5.0]
          },
          "recommendedMax": {
            "type": "number",
            "title": "Maximum recommended operating temperature [°C]",
            "examples": [35]
          }
        },
        "type": "object",
        "required": ["min", "max", "recommendedMin", "recommendedMax"],
        "title": "OperatingTemperature"
      },
      "RateLimitExceeded": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Rate limit exceeded"
          }
        },
        "type": "object",
        "title": "RateLimitExceeded",
        "description": "This response is reserved by Product Gateway."
      },
      "ServiceUnavailable": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "type": "object",
        "title": "ServiceUnavailable",
        "description": "This response is reserved by Product Gateway."
      },
      "Unauthorized": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "Unauthorized"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "Voltage": {
        "properties": {
          "min": {
            "type": "number",
            "title": "Minimum voltage",
            "examples": [38.0]
          },
          "max": {
            "type": "number",
            "title": "Maximum voltage",
            "examples": [56.0]
          },
          "nominal": {
            "type": "number",
            "title": "Nominal voltage",
            "examples": [48.3]
          }
        },
        "type": "object",
        "required": ["min", "max", "nominal"],
        "title": "Voltage"
      }
    }
  }
}
