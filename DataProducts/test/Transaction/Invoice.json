{
  "openapi": "3.1.0",
  "info": {
    "title": "Invoice",
    "description": "Invoice",
    "version": "0.0.2"
  },
  "paths": {
    "/test/Transaction/Invoice": {
      "post": {
        "summary": "Invoice",
        "description": "Invoice",
        "operationId": "request_test_Transaction_Invoice",
        "parameters": [
          {
            "name": "x-consent-token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Optional consent token",
              "default": "",
              "title": "X-Consent-Token"
            },
            "description": "Optional consent token"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The login token. Value should be \"Bearer [token]\"",
              "default": "",
              "title": "Authorization"
            },
            "description": "The login token. Value should be \"Bearer [token]\""
          },
          {
            "name": "x-authorization-provider",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The bare domain of the system that provided the token.",
              "title": "X-Authorization-Provider"
            },
            "description": "The bare domain of the system that provided the token."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-API-Key",
              "description": "API key or token"
            },
            "description": "API key or token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitExceeded"
                }
              }
            },
            "description": "Too Many Requests"
          },
          "444": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceNotFound"
                }
              }
            },
            "description": "Additional Response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSourceError"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadGateway"
                }
              }
            },
            "description": "Bad Gateway"
          },
          "503": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            },
            "description": "Service Unavailable"
          },
          "504": {
            "content": {
              "text/plain": {},
              "text/html": {},
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeout"
                }
              }
            },
            "description": "Gateway Timeout"
          },
          "550": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoesNotConformToDefinition"
                }
              }
            },
            "description": "Additional Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadGateway": {
        "properties": {},
        "type": "object",
        "title": "BadGateway",
        "description": "This response is reserved by Product Gateway."
      },
      "DataSourceError": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "DataSourceError"
      },
      "DataSourceNotFound": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Data source not found"
          }
        },
        "type": "object",
        "title": "DataSourceNotFound",
        "description": "This response is reserved by Product Gateway."
      },
      "DoesNotConformToDefinition": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Response from data source does not conform to definition"
          },
          "data_source_status_code": {
            "type": "integer",
            "title": "Data source status code",
            "description": "HTTP status code returned from the data source"
          }
        },
        "type": "object",
        "required": ["data_source_status_code"],
        "title": "DoesNotConformToDefinition",
        "description": "This response is reserved by Product Gateway."
      },
      "Forbidden": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "Forbidden"
      },
      "GatewayTimeout": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "type": "object",
        "title": "GatewayTimeout",
        "description": "This response is reserved by Product Gateway."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InvoiceRequest": {
        "properties": {
          "shipmentId": {
            "type": "string",
            "title": "Shipment ID"
          }
        },
        "type": "object",
        "required": ["shipmentId"],
        "title": "InvoiceRequest"
      },
      "InvoiceResponse": {
        "properties": {
          "amountToBePaid": {
            "type": "number",
            "title": "Amount to be paid"
          },
          "bankContactBic": {
            "type": "string",
            "title": "Bank contact BIC"
          },
          "bankContactIban": {
            "type": "string",
            "title": "Bank contact IBAN"
          },
          "bankContactName": {
            "type": "string",
            "title": "Bank contact name"
          },
          "buyerContactPersonName": {
            "type": "string",
            "title": "Buyer contact person name"
          },
          "buyerName": {
            "type": "string",
            "title": "Buyer name"
          },
          "buyerVatNumber": {
            "type": "string",
            "title": "Buyer VAT number"
          },
          "contractReference": {
            "type": "string",
            "title": "Contract reference"
          },
          "countryOfOrigin": {
            "type": "string",
            "title": "Country of origin"
          },
          "currencyCode": {
            "type": "string",
            "title": "Currency code"
          },
          "descriptionOfGoods": {
            "type": "string",
            "title": "Description of goods"
          },
          "handlingUnits": {
            "type": "integer",
            "title": "Handling units"
          },
          "incoterm": {
            "type": "string",
            "title": "Incoterm"
          },
          "incotermPlace": {
            "type": "string",
            "title": "Incoterm place"
          },
          "invoiceNote": {
            "type": "string",
            "title": "Invoice note"
          },
          "invoiceReference": {
            "type": "string",
            "title": "Invoice reference"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time",
            "title": "Issue date"
          },
          "lcNumber": {
            "type": "string",
            "title": "LC number"
          },
          "letterOfCreditValue": {
            "type": "integer",
            "title": "Letter of credit value"
          },
          "modeOfDelivery": {
            "type": "string",
            "title": "Mode of delivery"
          },
          "orderReference": {
            "type": "string",
            "title": "Order reference"
          },
          "projectReference": {
            "type": "string",
            "title": "Project reference"
          },
          "sellerContactPersonName": {
            "type": "string",
            "title": "Seller contact person name"
          },
          "sellerName": {
            "type": "string",
            "title": "Seller name"
          },
          "sellerVatNumber": {
            "type": "string",
            "title": "Seller VAT number"
          },
          "taxRate": {
            "type": "integer",
            "title": "Tax rate"
          },
          "totalGrossWeight": {
            "type": "number",
            "title": "Total gross weight"
          },
          "totalNetWeight": {
            "type": "number",
            "title": "Total net weight"
          },
          "totalVolume": {
            "type": "number",
            "title": "Total volume"
          },
          "valueOfShipment": {
            "type": "number",
            "title": "Value of shipment"
          }
        },
        "type": "object",
        "required": [
          "amountToBePaid",
          "bankContactBic",
          "bankContactIban",
          "bankContactName",
          "buyerContactPersonName",
          "buyerName",
          "buyerVatNumber",
          "contractReference",
          "countryOfOrigin",
          "currencyCode",
          "descriptionOfGoods",
          "handlingUnits",
          "incoterm",
          "incotermPlace",
          "invoiceNote",
          "invoiceReference",
          "issueDate",
          "lcNumber",
          "letterOfCreditValue",
          "modeOfDelivery",
          "orderReference",
          "projectReference",
          "sellerContactPersonName",
          "sellerName",
          "sellerVatNumber",
          "taxRate",
          "totalGrossWeight",
          "totalNetWeight",
          "totalVolume",
          "valueOfShipment"
        ],
        "title": "InvoiceResponse"
      },
      "NotFound": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "NotFound"
      },
      "RateLimitExceeded": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": "Rate limit exceeded"
          }
        },
        "type": "object",
        "title": "RateLimitExceeded",
        "description": "This response is reserved by Product Gateway."
      },
      "ServiceUnavailable": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description",
            "default": ""
          }
        },
        "type": "object",
        "title": "ServiceUnavailable",
        "description": "This response is reserved by Product Gateway."
      },
      "Unauthorized": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Error type",
            "description": "Error identifier"
          },
          "message": {
            "type": "string",
            "title": "Error message",
            "description": "Error description"
          }
        },
        "type": "object",
        "required": ["type", "message"],
        "title": "Unauthorized"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  },
  "x-strict-validation": false
}
